<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ojt</groupId>
	<artifactId>ojt-installer</artifactId>
	<packaging>pom</packaging>
	<name>Open Judo Tournament - Installer module</name>
	<description>Installer module for OJT project</description>	
	
	<parent>
		<groupId>ojt</groupId>
		<artifactId>ojt-main</artifactId>		
		<version>1.1.4-SNAPSHOT</version>
	</parent>
	
	<properties>
		<junit-version>4.4</junit-version>
		<jxl-version>2.6</jxl-version>
	</properties>
	
	<developers>		
		<developer>
			<id>fmore</id>
			<name>Fabien More</name>
			<email>fmore@users.sourceforge.net</email>			
		</developer>
		<developer>
			<id>cart05</id>
			<name>Cédric Dall'Agnola</name>
			<email>cart05@users.sourceforge.net</email>			
		</developer>
		<developer>
			<id>dwarfconan</id>
			<name>Rémi Guitreau</name>
			<email>dwarfconan@users.sourceforge.net</email>			
		</developer>
	</developers>
	
	<dependencies>
		<dependency>
			<groupId>ojt</groupId>
			<artifactId>ojt-core</artifactId>
			<version>${pom.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
	
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>2.0.2</version> -->
				<configuration>					
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
				<inherited>true</inherited>
			</plugin>
				
			<plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-source-plugin</artifactId>
      		</plugin>

		</plugins>
	</build>
	
	<profiles>
		<!--  Pour que l'install soit automatique il FAUT pouvoir se logger sans PWD sur scarab-server avec le pwd nc! -->
		<!-- En effet, le .deb généré est copié sur scarab-server, puis on doit lancer un script de maj du pool debian -->
		<!--  Ce script est lancé par ssh -->
		<!--  Voir : https://scarab-server/wiki/index.php/OpenSSH pour savoir comment configurer ssh pour se logger sans pwd -->
		<profile>
			<id>Debian_Builder</id>
			<activation>
				<os>
					<family>Linux</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2-beta-4</version>
						<executions>
							<execution>
								<id>windows</id>
								<phase>compile</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/bin-release-linux.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					 <plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>linux-java-install</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<!-- buildInstalls.sh DOIT être dans le path -->
									<executable>javaInstaller.sh</executable>
									<arguments>
										<!-- le nom de l'install -->
										<argument>${pom.artifactId}</argument>
										<argument>${pom.version}</argument>
									</arguments>
								</configuration>
							</execution>							
						</executions>
					</plugin>
					<plugin>
			        <artifactId>maven-antrun-plugin</artifactId>
			        <version>1.3</version>
			        <executions>
			          <execution>
			            <phase>package</phase>
			            <configuration>
			              <tasks>
			              	<tar basedir="${project.build.directory}/${pom.artifactId}-${pom.version}-bin-release-linux" destfile="${project.build.directory}/${pom.artifactId}_${pom.version}.tar"></tar>
			              	<gzip src="${project.build.directory}/${pom.artifactId}_${pom.version}.tar" destfile="${project.build.directory}/${pom.artifactId}_${pom.version}.tar.gz" />
							<delete file="${project.build.directory}/${pom.artifactId}_${pom.version}.tar" />
			              </tasks>
			            </configuration>
			            <goals>
			              <goal>run</goal>
			            </goals>
			          </execution>
			        </executions>
			      </plugin>
			     
					<!-- Attache le .zip de l'install à l'artifact -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>deploy</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>target/${pom.artifactId}_${pom.version}.zip</file>
 											<type>zip</type>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- <profile>
			<id>JVM NSIS Builder</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
				<file>
					<missing>target_install/jvminstaller.exe</missing>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>JVM NSIS Builder</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>makensis</executable>
									<workingDirectory>
										src/main/nsis
									</workingDirectory>
									<arguments>
										<argument>
											-DVERSION=${pom.version}
										</argument>
										<argument>jvminstaller.nsi</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile> -->
		
		<profile>
			<id>NSIS Builder</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
<!--
				<property>
					<name>nsisbuilder</name>
					<value>!false</value>
				</property>
-->				
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2-beta-4</version>
						<executions>
							<execution>
								<id>windows</id>
								<phase>compile</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/bin-release-windows.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>NSIS Builder</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<!-- makensis DOIT �tre dans le path -->
									<executable>makensis</executable>
									<workingDirectory>
										src/main/nsis
									</workingDirectory>
									<arguments>
										<!-- On donne � NSIS la version du pom -->
										<argument>
											-DVERSION=${pom.version}
										</argument>
										<argument>ojtsetup.nsi</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

			<profile>
				<id>makep</id>
					<properties>
						<!-- Phase maven durant laquelle l'install est build�e : typiquement post-site, deploy, package... -->
						<buildinstallphase>package</buildinstallphase>
					</properties>
			</profile>
	</profiles>

</project>